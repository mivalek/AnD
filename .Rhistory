getwd()
remotes::install_github("mivalek/teachR")
library(teachR)
remove.packages("teachR", lib="~/R/win-library/3.6")
remotes::install_github("mivalek/teachR")
library(teachR)
getwd()
slidify("./lectures/lecture_1_intro.Rmd", course = "and", colour = "#008080")
slidify("./lectures/lecture_1_intro.Rmd", course = "and", colour = "#008080")
slidify("./lectures/lecture_1_intro.Rmd", course = "and")
library(teachR)
library(teachR)
slidify("./lectures/lecture_1_intro.Rmd", course = "and")
slidify("./lectures/lecture_1_intro.Rmd", course = "and", colour = "#008080", incremental = T)
105*.045 + 105
105*.046 + 105
105*.047 + 105
105*.048 + 105
slidify("./lectures/lecture_1_intro.Rmd", course = "and", colour = "#008080", incremental = T)
handout("./lectures/lecture_1_intro.Rmd", course = "and", colour = "#008080")
install.packages("sussex.fix")
remotes::install_github("ljcolling/sussex.fix")
remotes::install_github("ljcolling/sussexfix")
remotes::install_github("ljcolling/sussex")
remotes::install_github("ljcolling/sussexfun")
source(url("https://tinyurl.com/sussexfun"))
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and")
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
library(teachR)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and", solution = T, tasks_to_headings = T)
get(wd)
getwd()
slidify("./practicals/practical_1_guided.Rmd", course = "and")
library(teachR)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and")
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and")
debug(make.sheet)
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and")
make.sheet("./practicals/practical_1_wkst.Rmd", course = "and")
render(input = temp_rmd, output_format = html_document(toc = toc,
toc_depth = toc_depth, toc_float = toc_float, fig_width = fig_width,
fig_height = fig_height, highlight = highlight,
includes = includes(after_body = c(css, js)), ...),
intermediates_dir = tempdir())
temp_rmd
tempdir()
path()
rstudioapi::getSourceEditorContext()$path
getwd()
rstudioapi::getSourceEditorContext()$path
